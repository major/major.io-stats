name: Publish blog stats

on:
  push:
    branches:
      - "main"
  schedule:
    - cron: '45 11 * * *'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pages: write

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set time zone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "America/Chicago"
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download logs from artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          name: logs-tarball
          if_no_artifact_found: warn

      - name: Extract logs
        run: |
          #!/bin/bash
          if [ -e logs.tar.zst ]; then
            zstd -d --rm logs.tar.zst
            tar -xf logs.tar
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::911986281031:role/github-actions-major.io-stats
          role-duration-seconds: 900
          aws-region: us-east-1

      - name: Create directories
        run: mkdir -p logs public

      - name: Download log files
        run: aws s3 sync --size-only s3://major.io-logs/ logs/

      - name: Prepare geoip databases
        run: |
          pushd geoip
          tar --zstd -xf geoip.tar.zst

      - name: Run goaccess
        run: |
          find logs -name "*.gz" | \
            xargs zcat | \
            docker run --rm -i -v ./geoip:/geoip:ro -e LANG=$LANG docker.io/allinurl/goaccess \
              --log-format CLOUDFRONT \
              --date-format CLOUDFRONT \
              --time-format CLOUDFRONT \
              --agent-list \
              --ignore-status=301 \
              --ignore-status=302 \
              --ignore-crawlers \
              --real-os \
              --anonymize-ip \
              --http-protocol=yes \
              --http-method=yes \
              --no-query-string \
              --geoip-database /geoip/GeoLite2-City.mmdb \
              --geoip-database /geoip/GeoLite2-Country.mmdb \
              --geoip-database /geoip/GeoLite2-ASN.mmdb \
              --output html - > public/index.html

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Create log tarball
        run: |
          tar -cf logs.tar logs
          zstd --rm -19 -v -T0 logs.tar

      - name: Store log tarball in artifact
        uses: actions/upload-artifact@v4
        with:
          name: logs-tarball
          path: logs.tar.zst
          compression-level: 0

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
